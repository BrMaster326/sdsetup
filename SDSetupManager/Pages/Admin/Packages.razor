@page "/admin/packages"

<Authorized MinRole="SDSetupRole.Administrator">

    <h2>Packages</h2>
    <p>You are in an administrative view. You have unrestricted control over all packages here. Be careful!</p>

    @if (initialized) {

        @foreach (Platform _plat in Globals.Manifest.Platforms.Values) {
            Platform plat = _plat;
            <h3>@plat.Name</h3>
            <BSTable IsSmall="true" IsResponsive="true" IsStriped="true" >
                <thead>
                    <tr>
                        <th scope="col">Display Name</th>
                        <th scope="col">ID</th>
                        <th scope="col">Latest Version</th>
                        <th scope="col">Authors</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (PackageSection sec in plat.PackageSections.Values) {
                        @foreach (PackageCategory cat in sec.Categories.Values) {
                            @foreach (PackageSubcategory sub in cat.Subcategories.Values) {
                                @foreach (Package p in sub.Packages.Values) {
                                    <tr>
                                        <th scope="row">@p.DisplayName</th>
                                        <td>@p.ID</td>
                                        <td>@p.VersionInfo.Version</td>
                                        <td>@p.Authors</td>
                                        <td>
                                            <a href="/admin/packages/@p.ID"><BSButton Size="Size.Small" Color="Color.Warning">Edit</BSButton></a>
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    }
                </tbody>
            </BSTable>
         }


     }
</Authorized>

@code {
    private bool initialized = false;

    protected override async Task OnInitializedAsync() {
        Globals.LockInput = true;
        initialized = await Globals.TryUpdateManifest();
        await base.OnInitializedAsync();
        Globals.LockInput = false;
    }
}