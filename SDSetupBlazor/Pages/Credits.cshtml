<!-- Copyright (c) 2018 noahc3
   - This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
@page "/credits"
<h1 style="text-align:center">Credits</h1>
<h3>Package Credits</h3>
@if (G.initialized) {
	<table class="ui celled padded table">
		<thead>
			<tr>
				<th>Package ID</th>
				<th>Authors</th>
				<th>Version</th>
				<th>Source</th>
			</tr>
		</thead>
		<tbody>
			@foreach (Package p in G.packages["switch"].Values) {
				if (String.IsNullOrEmpty(p.Authors)) { continue; }
				<tr>
					<td>@p.Name</td>
					<td>@p.Authors</td>
					<td>@p.Version</td>
					<td>@if (@p.Source.Contains("https://") || p.Source.Contains("http://")) {<a href="@p.Source">@p.Source</a>} else {@p.Source}</td>
				</tr>
			}

		</tbody>
	</table>
} else {
	<h4>Loading, please wait...</h4>
}

<h3>Credits</h3>

<ul class="ui list">
	<li>Steve Sanderson and contributors for making this almost amazing thing called <a href="https://blazor.net/">Blazor</a></li>
	<li>Rikumax25 / Jorgev259 for JSZip wrapper functions used in <a href="https://github.com/jorgev259/3SDSetup">3SDSetup</a>/<a href="https://github.com/jorgev259/wiiusetup">WiiuSetup</a>, ultimately making my life much easier</li>
	<li>Chanan Braunstein for <a href="https://github.com/chanan/BlazorStrap">BlazorStrap</a></li>
	<li>Joonas W. for <a href="https://joonasw.net/view/csharp-await-and-js-promises-in-blazor">Using C# await against JS Promises in Blazor</a></li>
</ul>

@functions {
public static Action ForceUiUpdate;

protected override async Task OnInitAsync() {
	ForceUiUpdate = new Action(() => StateHasChanged());
}
}